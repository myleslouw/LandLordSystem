{"ast":null,"code":"var _jsxFileName = \"D:\\\\OwnProjects\\\\WebDev\\\\LandLordSystem\\\\Client\\\\src\\\\PagesAndComponents\\\\AllUsersContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useLayoutEffect } from \"react\";\nimport Axios from 'axios';\n\n// create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allUsersContext = /*#__PURE__*/createContext({});\nconst AllUsersContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // the value that will be given to the context\n  const [users, setUsers] = useState([]);\n  const getUsers = () => {\n    Axios.get('http://localhost:3001/fetchusers').then(response => {\n      setUsers(response.data);\n    });\n  };\n\n  //gets the userdata from the database\n  useEffect(() => {\n    getUsers();\n    console.log(\"Rendered\");\n  }, []);\n  return (\n    /*#__PURE__*/\n    // the Provider gives access to the context to its children\n    _jsxDEV(allUsersContext.Provider, {\n      value: {\n        users,\n        setUsers\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(AllUsersContextProvider, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = AllUsersContextProvider;\nexport { allUsersContext, AllUsersContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AllUsersContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useLayoutEffect","Axios","allUsersContext","AllUsersContextProvider","children","users","setUsers","getUsers","get","then","response","data","console","log"],"sources":["D:/OwnProjects/WebDev/LandLordSystem/Client/src/PagesAndComponents/AllUsersContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Axios from 'axios'\r\n\r\n// create context\r\nconst allUsersContext = createContext({});\r\n\r\nconst AllUsersContextProvider = ({ children }) => {\r\n    // the value that will be given to the context\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const getUsers = () => {\r\n        Axios.get('http://localhost:3001/fetchusers').then((response) => {\r\n            setUsers(response.data);\r\n        })\r\n    }\r\n\r\n    //gets the userdata from the database\r\n    useEffect(() => {\r\n        getUsers()\r\n        console.log(\"Rendered\")\r\n    }, [])\r\n\r\n    return (\r\n        // the Provider gives access to the context to its children\r\n        <allUsersContext.Provider value={{ users, setUsers }}>\r\n            {children}\r\n        </allUsersContext.Provider>\r\n    );\r\n};\r\n\r\nexport { allUsersContext, AllUsersContextProvider };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,QAAQ,OAAO;AAClF,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;AAEzC,MAAMM,uBAAuB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACzC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,QAAQ,GAAG,MAAM;IACnBN,KAAK,CAACO,GAAG,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC7DJ,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACZQ,QAAQ,EAAE;IACVK,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACI;IACA,QAAC,eAAe,CAAC,QAAQ;MAAC,KAAK,EAAE;QAAER,KAAK;QAAEC;MAAS,CAAE;MAAA,UAChDF;IAAQ;MAAA;MAAA;MAAA;IAAA;EACc;AAEnC,CAAC;AAAC,GAtBID,uBAAuB;AAAA,KAAvBA,uBAAuB;AAwB7B,SAASD,eAAe,EAAEC,uBAAuB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}